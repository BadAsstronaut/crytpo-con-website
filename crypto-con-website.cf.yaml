AWSTemplateFormatVersion: 2010-09-09

Parameters:
  S3Bucket:
    Description: S3 Bucket with Lambda source
    Type: String
  S3GlobeePaymentKey:
    Description: Path of the source code .zip file
    Type: String

Resources:
  InventoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Inventory
      AttributeDefinitions:
        - AttributeName: TicketTierName
          AttributeType: "S"
        - AttributeName: CurrentPrice
          AttributeType: "N"
        - AttributeName: InitialInventory
          AttributeType: "N"
        - AttributeName: Available
          AttributeType: "N"
      KeySchema:
        - AttributeName: TicketTeirName
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3

  AttendeesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Attendees
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: "S"
        - AttributeName: Name
          AttributeType: "S"
        - AttributeName: Email
          AttributeType: "S"
        - AttributeName: TicketTierName
          AttributeType: "S"
        - AttributeName: ConfirmationKey
          AttributeType: "S"
        - AttributeName: PurchaseId
          AttributeType: "S"
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3

  PurchasesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Purchases
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: "S"
        - AttributeName: ProcessingType
          AttributeType: "S"
        - AttributeName: Details # JSON Blob of stripe or globee transaction
          AttributeType: "S"
      KeySchema:
        - AttributeName: Id
          KeyType: UUID
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: logs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
        - PolicyName: dynamodb
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: "1"
                Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:aws:dynamodb:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - ":table/Inventory*"
                  - Fn::Join:
                      - ""
                      - - "arn:aws:dynamodb:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - ":table/Attendees*"
                  - Fn::Join:
                      - ""
                      - - "arn:aws:dynamodb:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - ":table/Resources*"

  GlobeePaymentFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3GlobeePaymentKey
      Handler: globeePayment
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs8.10

  GlobeePaymentPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt GlobeePaymentFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: |
        !Join:
          - ''
          - - 'arn:aws:execute-api:'
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - Ref: RestApi
          - "/globee-payment*"

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: crypto-conference-payments
      Description: Crypto Conference Website Payments

  GlobeePaymentResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: globee-payment
      RestApiId: !Ref RestApi

  GlobeeOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId: !Ref GlobeePaymentResource
      RestApiId: !Ref RestApi
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        Type: MOCK
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Api-Key'"
              method.response.header.Access-Control-AllowMethods: "'GET,POST,OPTIONS'"
              mothod.response.header.Access-Control-Allow-Origin: "'*'" # RESTRICT TO SITE BEFORE PROD!
            ResponseTemplates:
              application/json: ""
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode":200}'
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"

  GlobeePaymentPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId: !Ref GlobeePaymentResource
      RestApiId: !Ref RestApi
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: |
          !Join 
            - ""
            - - arn:aws:apigateway:
              - !Ref AWS::Region
              - :lambda:path/2015-03-31/functions/
              - !GetAtt Lambda.Arn
              - /invocations
        IntegrationResponses:
          - ResponseTemplates:
              application/json: "$input.json('$.body')"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: "$input.json('$.body')"
      MethodResponses:
        - ResponseModels:
            application/json: !Ref GlobeePaymentModel
          StatusCode: "200"

  GlobeePaymentModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Ref restApi
      ContentType: application/json
      Description: Inputs for crypto payment with globee
      Name: GlobeePaymentModel
      Schema:
        "$schema": http://json-schema.org/draft-04/schema#
        title: GlobeePaymentModel
        type: object
        properties:
          id:
            type: string
          status:
            type: string
          total:
            type: number
          currency:
            type: string
          customer:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
          redirect_url:
            type: string
          success_url:
            type: string
